{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccountRequest","connect","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","networkId","parseInt","givenProvider","SmartContractObj","SmartContract","abi","on","updateAccount","location","reload","SpacerSmall","styled","div","image","Container","flex","fd","jc","ai","test","TextDescription","p","StyledButton","button","ConnectButton","img","React","createElement","useDispatch","useSelector","useState","setFeedback","setClaimingNft","getData","useEffect","onClick","e","preventDefault","style","textAlign","withdraw","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","domContainer","document","querySelector","ReactDOM","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById"],"mappings":"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","file":"static/js/main.3fcc3fdb.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/foranimals.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\nimport fs from 'fs';\n\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider('https://rinkeby.infura.io/v3/aa024e76b2f34f17805dc2320b395cd8');\n      var web3 = new Web3('https://rinkeby.infura.io/v3/aa024e76b2f34f17805dc2320b395cd8');\n      // 'https://rinkeby.infura.io/v3/aa024e76b2f34f17805dc2320b395cd8'\n     // let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        console.log(networkId);\n\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (parseInt(networkId) == 4) {\n          console.log(web3.givenProvider)\n          Web3EthContract.setProvider(web3.givenProvider);\n          var web3 = new Web3(web3.givenProvider);\n          \n          const SmartContractObj = new Web3EthContract(\n            SmartContract.abi,\n            \"0x643afFdCC6Ff82611e180Cb96A83338Ec955C83a\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Etherium.\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Waiting for permission\"));\n\n\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\nexport const removeAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--dark-grey);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  // color: var(--white);\n  // font-size: 18px;\n  // font-weight: 500;\n  // line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  // color: var(--white);\n  // font-size: 14px;\n  // line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  // color: var(--white);\n  // font-size: 12px;\n  // line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { Component, useEffect, useState } from \"react\";\nimport ReactDOM from 'react-dom'\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport store from \"./redux/store\";\n\nexport const StyledButton = styled.button`\nfont-family: Lato;\n\tfont-size: 1.6rem;\n\toutline: none;\n\tbackground: #172d42;\n\tcolor: #fff;\n\tborder-radius: 5px;\n\tborder: none;\n  padding: 1px 20px;\n\t border-radius: 8px;\n\t// background-color: #8ef4d6;\n\n\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  @media (min-width: 767px) {\n    width: 350px;\n    height: 350px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nconst e = React.createElement;\n\n\nconst ConnectButton = () => {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  // const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\n  const [claimingNft, setClaimingNft] = useState(false);\n\n  const claimNFTs = (_amount) => {\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Minting your Nerdy Coder Clone...\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      .send({\n        gasLimit: \"285000\",\n        to: \"0x6666a1F91f76BE55A9D41c1f0515981f09a4536C\",\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei((1 * _amount).toString(), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"WOW, you now own a Nerdy Coder Clone. go visit Opensea.io to view it.\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n  const withdraw = () => {\n    console.log(blockchain.smartContract.methods)\n\n    blockchain.smartContract.methods\n      .withdraw()\n      .send({\n        gasLimit: \"285000\",\n        to: \"0x6666a1F91f76BE55A9D41c1f0515981f09a4536C\",\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei((0).toString(), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"WOW, you now own a Nerdy Coder Clone. go visit Opensea.io to view it.\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n  const Disconnect = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n \n\n    return (\n      <s.Container\n      flex={1}\n      jc={\"center\"}\n      ai={\"center\"}\n    >\n             <>\n\n          {blockchain.account === \"\" ||\n          blockchain.smartContract === null ? (\n            <s.Container ai={\"center\"} jc={\"center\"}>\n              <s.SpacerSmall />\n              <StyledButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  dispatch(connect());\n                  getData();\n                }}\n                \n              >\n                Disconnected\n              </StyledButton>\n              {blockchain.errorMsg !== \"\" ? (\n                <>\n                  <s.SpacerSmall />\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\n                    {blockchain.errorMsg}\n                  </s.TextDescription>\n                </>\n              ) : null}\n            </s.Container>\n          ) : (\n            <s.Container ai={\"center\"} jc={\"center\"}>\n            <s.SpacerSmall />\n            <StyledButton\n              onClick={(e) => {\n                e.preventDefault();\n                // claimNFTs(1);\n                withdraw();\n                getData();\n              }}\n              \n            >\n              Connected\n            </StyledButton>\n            {blockchain.errorMsg == \"\" ? (\n              <>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  {blockchain.errorMsg}\n                </s.TextDescription>\n              </>\n            ) : null}\n          </s.Container>\n           \n          )}\n        </>\n\n    </s.Container>\n\n    )\n\n  \n}\nconst domContainer = document.querySelector('#like_button_container');\nReactDOM.render(<Provider store={store}>\n<ConnectButton/>\n</Provider>, domContainer);\n\nfunction App (){\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n\n  dispatch(connect())\n\n    return (\n        <div>\n\n        </div>\n    )\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/theme.css\";\nimport \"./styles/app.69196794.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}